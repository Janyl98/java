package oop.Encapsulation;

import java.util.ArrayList;

public class BankAccount {
    // –ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è–ª–∞–Ω–≥–∞–Ω —Ç–∞–ª–∞–∞–ª–∞—Ä
    private String ownerName;
    private double balance;
    private String pinCode; // PIN-–∫–æ–¥
    private ArrayList<String> transactionHistory; // –¢–∞—Ä—ã—Ö
    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä (–∫–∞–∞–ª–∞—Å–∞“£—ã–∑)
    public BankAccount(String ownerName, double initialBalance, String pinCode) {
        this.ownerName = ownerName;
        this.balance = initialBalance;
        this.pinCode = pinCode;
        this.transactionHistory = new ArrayList<>();
        transactionHistory.add("–≠—Å–µ–ø –∞—á—ã–ª–¥—ã. –ë–∞—à—Ç–∞–ø–∫—ã –±–∞–ª–∞–Ω—Å: " + initialBalance + " —Å–æ–º.");
    }

    // Getter
    public String getOwnerName() {
        return ownerName;
    }

    public double getBalance(String enteredPin) {
        if (checkPin(enteredPin)) {
            return balance;
        } else {
            System.out.println("‚ùå PIN —Ç—É—É—Ä–∞ —ç–º–µ—Å!");
            return -1;
        }
    }

    // Setter
    public void setOwnerName(String ownerName) {
        this.ownerName = ownerName;
    }

    // –ú–µ—Ç–æ–¥: –∞–∫—á–∞ –∫–æ—à—É—É
    public void deposit(double amount, String enteredPin) {
        if (checkPin(enteredPin)) {
            if (amount > 0) {
                balance += amount;
                String record = "+ " + amount + " —Å–æ–º –∫–æ—à—É–ª–¥—É.";
                transactionHistory.add(record);
                System.out.println(record);
            } else {
                System.out.println("‚ùå –¢—É—É—Ä–∞ —ç–º–µ—Å —Å—É–º–º–∞!");
            }
        } else {
            System.out.println("‚ùå PIN —Ç—É—É—Ä–∞ —ç–º–µ—Å!");
        }
    }

    // –ú–µ—Ç–æ–¥: –∞–∫—á–∞ –∞–ª—É—É
    public void withdraw(double amount, String enteredPin) {
        if (checkPin(enteredPin)) {
            if (amount > 0 && amount <= balance) {
                balance -= amount;
                String record = "- " + amount + " —Å–æ–º –∞–ª—ã–Ω–¥—ã.";
                transactionHistory.add(record);
                System.out.println(record);
            } else {
                System.out.println("‚ùå –ë–∞–ª–∞–Ω—Å –∂–µ—Ç–∏—à—Å–∏–∑ –∂–µ —Ç—É—É—Ä–∞ —ç–º–µ—Å —Å—É–º–º–∞!");
            }
        } else {
            System.out.println("‚ùå PIN —Ç—É—É—Ä–∞ —ç–º–µ—Å!");
        }
    }
    public void showTransactionHistory(String enteredPin) {
        if (checkPin(enteredPin)) {
            System.out.println("üìú –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Ç–∞—Ä—ã—Ö—ã:");
            for (String transaction : transactionHistory) {
                System.out.println(" - " + transaction);
            }
        } else {
            System.out.println("‚ùå PIN —Ç—É—É—Ä–∞ —ç–º–µ—Å!");
        }
    }

    private boolean checkPin(String enteredPin) {
        return this.pinCode.equals(enteredPin);
    }
}
